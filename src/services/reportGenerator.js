import jsPDF from 'jspdf';
import 'jspdf-autotable';
import { formatDate } from '../utils/helpers';

export const generateLeaderboardReport = (leaderboardData, currentUser) => {
  const pdf = new jsPDF();
  const pageWidth = pdf.internal.pageSize.width;

  // Add header
  pdf.setFontSize(24);
  pdf.setTextColor(44, 62, 80);
  pdf.text('ScamSnipper AI', pageWidth / 2, 20, { align: 'center' });
  
  pdf.setFontSize(16);
  pdf.text('Community Leaderboard Report', pageWidth / 2, 30, { align: 'center' });
  
  // Add date and user info
  pdf.setFontSize(12);
  pdf.setTextColor(100, 100, 100);
  pdf.text(`Generated: ${formatDate(new Date())}`, 20, 45);
  if (currentUser?.name) {
    pdf.text(`Generated by: ${currentUser.name}`, 20, 52);
  }

  // Add leaderboard table
  pdf.autoTable({
    startY: 60,
    head: [['Rank', 'User', 'Level', 'Points', 'Reports', 'Badges']],
    body: leaderboardData.map(user => [
      user.rank,
      user.name,
      `Level ${user.level}`,
      user.points,
      user.reportsSubmitted,
      user.badges
    ]),
    theme: 'striped',
    headStyles: {
      fillColor: [67, 102, 241],
      textColor: [255, 255, 255],
      fontStyle: 'bold'
    },
    styles: {
      fontSize: 10,
      cellPadding: 5
    },
    alternateRowStyles: {
      fillColor: [245, 247, 250]
    }
  });

  // Add footer
  const footerText = 'Protected by ScamSnipper AI - Community-Driven Scam Prevention';
  pdf.setFontSize(10);
  pdf.setTextColor(150, 150, 150);
  pdf.text(footerText, pageWidth / 2, pdf.internal.pageSize.height - 10, { align: 'center' });

  return pdf;
};